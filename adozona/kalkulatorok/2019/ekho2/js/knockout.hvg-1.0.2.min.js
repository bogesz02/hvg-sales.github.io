/*
 * Knockout JavaScript HVG extender v1.0.2
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */
function formatHandler(e, r, n, t) {
    var a = e() instanceof Field ? e() : e,
        i = e() instanceof Field ? e().value : e;
    return a.format = ko.computed({
        read: function() {
            var e = i(),
                o = a.focus instanceof Function ? a.focus() : !1,
                u = readAsFormat(e, r, n, t ? !0 : o);
            return u
        },
        write: function(e) {
            var t = i(),
                a = writeAsFloat(e, r, n);
            a !== t ? i(a) : e !== t && i.notifySubscribers(a)
        }
    }).extend({
        notify: "always"
    }), a
}

function readAsFormat(e, r, n, t) {
    if (void 0 === e || null === e) return null;
    var a = Number(e) * n;
    return a = a.toFixed(r), a = a.toString(), a = a.replace(/\./g, ","), a = t ? a : a.replace(/\B(?=(\d{3})+(?!\d))/g, "."), String(a)
}

function writeAsFloat(e, r, n) {
    if (void 0 === e || null === e) return null;
    var t = String(e);
    t = t.replace(/\./g, ""), t = t.replace(/\,/g, "."), t = t.replace(/[^0-9\.\-]/g, ""), t = parseFloat(t);
  	Math.log10 = Math.log10 || function(x) {
    	return Math.log(x) * Math.LOG10E;
  	};
    var a = Math.log10(n) + r,
        i = Math.pow(10, r),
        o = isNaN(t) ? 0 : t;
    return o = Math.round(o * i), o /= i * n, o = o.toFixed(a), Number(o)
}
ko.bindingHandlers.select = {
    init: function(e, r) {
        ko.utils.registerEventHandler(e, "focus", function() {
            ko.utils.unwrapObservable(r()) && e.select()
        })
    }
}, ko.bindingHandlers.hidden = {
    update: function(e, r) {
        ko.bindingHandlers.visible.update(e, function() {
            return !ko.utils.unwrapObservable(r())
        })
    }
}, ko.extenders.formatToCurrency = function(e, r) {
    return formatHandler(e, r, 1)
}, ko.extenders.formatToPercent = function(e, r) {
    return formatHandler(e, r, 100)
}, ko.extenders.formatToNumber = function(e, r) {
    return formatHandler(e, r, 1, !0)
};